#!/bin/bash

echo "=== Kubernetes Scaling Script ==="

# Scale the Django app deployment to 3 replicas
echo "Scaling Django messaging app to 3 replicas..."
kubectl scale deployment django-messaging-app --replicas=3

# Wait for scaling to complete
echo "Waiting for scaling to complete..."
sleep 15

# Verify multiple pods are running
echo "=== Current Pods Status ==="
kubectl get pods -l app=django-messaging-app

# Check deployment status
echo "=== Deployment Status ==="
kubectl get deployment django-messaging-app

# Monitor resource usage
echo "=== Resource Usage ==="
kubectl top pods -l app=django-messaging-app 2>/dev/null || echo "Metrics server not available. Install with: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml"

# Get service endpoint for load testing
SERVICE_IP=$(kubectl get service django-messaging-service -o jsonpath='{.spec.clusterIP}')
echo "Service IP: $SERVICE_IP"

# Perform load testing with wrk (if available)
if command -v wrk &> /dev/null; then
    echo "=== Load Testing with wrk ==="
    echo "Running load test for 30 seconds with 10 connections..."
    kubectl run load-test --image=williamyeh/wrk --rm -it --restart=Never -- -t10 -c10 -d30s http://$SERVICE_IP:8000/
else
    echo "wrk not available. Install wrk for load testing."
    echo "Alternative: Use kubectl port-forward and test locally"
    echo "kubectl port-forward service/django-messaging-service 8000:8000"
fi

echo "=== Scaling complete! ==="