#!/bin/bash

echo "=== Rolling Update Script ==="

# Function to continuously test the application
test_app_continuously() {
    local service_name=$1
    local duration=$2
    local port=$3
    
    echo "Starting continuous testing for $duration seconds..."
    
    # Start port-forward in background
    kubectl port-forward service/$service_name $port:8000 &
    PORT_FORWARD_PID=$!
    
    # Wait for port-forward to establish
    sleep 3
    
    # Test continuously
    local end_time=$((SECONDS + duration))
    local success_count=0
    local failure_count=0
    
    while [ $SECONDS -lt $end_time ]; do
        if curl -f -s http://localhost:$port/ > /dev/null 2>&1; then
            success_count=$((success_count + 1))
            echo "✓ Request successful at $(date)"
        else
            failure_count=$((failure_count + 1))
            echo "✗ Request failed at $(date)"
        fi
        sleep 2
    done
    
    # Clean up port-forward
    kill $PORT_FORWARD_PID 2>/dev/null
    
    echo "Testing completed: $success_count successful, $failure_count failed requests"
    
    if [ $failure_count -gt 0 ]; then
        echo "⚠️  Application experienced downtime during rolling update!"
    else
        echo "✅ No downtime detected during rolling update!"
    fi
}

# Get current deployment status
echo "=== Current Deployment Status ==="
kubectl get deployment django-messaging-app-blue
kubectl get pods -l version=blue

# Start continuous testing in background
echo "Starting continuous testing..."
test_app_continuously "django-messaging-service-blue" 60 8003 &
TEST_PID=$!

# Apply the updated deployment file (triggers rolling update)
echo "Applying updated deployment (triggering rolling update)..."
kubectl apply -f blue_deployment.yaml

# Monitor the rolling update progress
echo "=== Monitoring Rolling Update Progress ==="
kubectl rollout status deployment/django-messaging-app-blue --timeout=300s

# Check rollout history
echo "=== Rollout History ==="
kubectl rollout history deployment/django-messaging-app-blue

# Verify the rolling update is complete
echo "=== Verifying Rolling Update Completion ==="
kubectl get deployment django-messaging-app-blue
kubectl get pods -l version=blue

# Check if all pods are running the new version
echo "=== Pod Details ==="
kubectl describe pods -l version=blue | grep -E "(Image:|Status:)"

# Wait for continuous testing to complete
wait $TEST_PID

# Final verification
echo "=== Final Verification ==="
kubectl get pods -l version=blue -o wide
kubectl logs -l version=blue --tail=5

echo "=== Rolling Update Complete! ==="

# Optional: Test the updated application
echo "Testing updated application..."
kubectl port-forward service/django-messaging-service-blue 8004:8000 &
FINAL_TEST_PID=$!
sleep 3
curl -f http://localhost:8004/ && echo "✅ Updated application is working!" || echo "❌ Updated application test failed!"
kill $FINAL_TEST_PID 2>/dev/null

echo "Rolling update script completed successfully!"